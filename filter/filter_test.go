// filter project filter.go
package filter

import (
	"testing"

	"micscript/numgo"
)

func TestNmoalizaton(t *testing.T) {
	tests := []struct {
		a  numgo.Array
		b  numgo.Array
		oa numgo.Array
		ob numgo.Array
	}{
		{
			numgo.Array{1, 2, 3, 4, 5},
			numgo.Array{2, 3, 4, 5, 6},
			numgo.Array{1, 2, 3, 4, 5},
			numgo.Array{2, 3, 4, 5, 6},
		},
		{
			numgo.Array{2, 2, 3, 4, 5},
			numgo.Array{2, 3, 4, 5, 6},
			numgo.Array{1, 1, 1.5, 2, 2.5},
			numgo.Array{1, 1.5, 2, 2.5, 3},
		},
	}
	for i, tt := range tests {
		normalization(tt.b, tt.a)
		if tt.a.IsEqual(tt.oa) == false {
			t.Error(i, "a参数归一化错误,期望值:", tt.oa, "得到值:", tt.a)
		}
		if tt.b.IsEqual(tt.ob) == false {
			t.Error(i, "b参数归一化错误,期望值:", tt.ob, "得到值:", tt.b)
		}
	}
}

func TestInitZi(t *testing.T) {
	tests := []struct {
		a  numgo.Array
		b  numgo.Array
		zi numgo.Array
	}{
		{
			numgo.Array{1., -1.45424359, 0.57406192},
			numgo.Array{0.02995458, 0.05990916, 0.02995458},
			numgo.Array{0.97004542, -0.54410733},
		},
	}
	for _, tt := range tests {
		zi, err := initZi(tt.b, tt.a)
		if err != nil {
			t.Log(err)
		} else {
			if zi.IsEqual(tt.zi) == false {
				t.Error("错误:期望值:", tt.zi, "得到值:", zi)
			}
		}
	}
}

func TestInitTx(t *testing.T) {
	tests := []struct {
		X     numgo.Array
		nfilt int
		res   numgo.Array
	}{
		{
			numgo.Array{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20},
			5,
			numgo.Array{-14.0, -13.0, -12.0, -11.0, -10.0, -9.0, -8.0, -7.0, -6.0, -5.0, -4.0, -3.0, -2.0, -1.0, 0.0,
				1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0,
				21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0},
		},
	}
	for _, tt := range tests {
		tx := initTx(tt.X, tt.nfilt)
		if tx.IsEqual(tt.res) == false {
			t.Error("初始化Tx错误,期望值:", tt.res, "得到值:", tx)
		}
	}
}

func TestFilter(t *testing.T) {
	tests := []struct {
		a   numgo.Array
		b   numgo.Array
		X   numgo.Array
		res numgo.Array
	}{
		{
			numgo.Array{1.0, -0.66817864},
			numgo.Array{0.16591068, 0.16591068},
			numgo.Array{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20},
			numgo.Array{1.11174407, 2.07457773, 3.04970063, 4.03301343, 5.02176632,
				6.01410596, 7.00877004, 8.00487929, 9.00179257, 9.99900123,
				10.99604532, 11.99243773, 12.987584, 13.98068431, 14.97060169,
				15.95567469, 16.93344356, 17.90024498, 18.85060832, 19.77635425},
		},
		{
			numgo.Array{1., -1.45424359, 0.57406192},
			numgo.Array{0.02995458, 0.05990916, 0.02995458},
			numgo.Array{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20},
			numgo.Array{0.89899996, 1.93065909, 2.9565825, 3.97582069, 4.98859359,
				5.99580663, 6.99872006, 7.99875272, 8.9973915, 9.99617193,
				10.99669297, 12.00062758, 13.00968872, 14.02550955, 15.04939642,
				16.08191685, 17.12229509, 18.16760849, 19.2118143, 20.24469196},
		},
	}
	for _, tt := range tests {
		y, err := Filtfilt(tt.b, tt.a, tt.X)
		if err != nil {
			t.Log(err)
		} else {
			if y.IsEqual(tt.res) == false {
				t.Error("滤波错误,期望值:", tt.res, "\n得到值:", y)
			}
		}
	}
}

func TestButterFilter(t *testing.T) {
	X := numgo.Array{
		11.29, 12.07, 9.26, 4.17, 0., 2.33, 0., 0.99, 1.77,
		0.13, 0.24, 0., 0., 0.03, 0., 0., 0.02, 0.03,
		0.03, 0.19, 0.17, 0.2, 0.14, 0.21, 0.21, 0.21, 0.21,
		0.22, 0.21, 0.47, 0.62, 0.46, 0.85, 0., 0.74, 1.01,
		1.06, 1.25, 1.63, 1.61, 1.47, 1.55, 1.82, 2.01, 2.17,
		2.05, 2.47, 2.47, 2.64, 2.94, 3.04, 3.16, 3.44, 3.27,
		3.64, 3.58, 3.67, 3.89, 4.33, 4.19, 4.56, 4.19, 4.21,
		4.22, 4.21, 4.21, 4.21, 4.21, 4.21, 4.21, 4.21, 4.21,
		4.21, 4.21, 4.21, 4.21, 4.21, 4.21, 4.21, 4.21, 4.21,
		4.21, 4.21, 4.21, 4.21, 4.21, 4.21, 4.21, 4.21, 4.21,
		4.21, 4.21, 4.21, 4.21, 4.21, 4.21, 4.21, 4.21, 4.21,
		4.21, 4.21, 4.21, 4.21, 4.21, 4.21, 4.21, 4.21, 4.21,
		4.22, 4.22, 4.24, 4.22, 4.37, 4.33, 4.78, 4.53, 4.86,
		4.78, 4.82, 5.12, 5.39, 5.4, 5.8, 5.75, 5.75, 5.79,
		6.25, 5.85, 6.49, 6.38, 6.28, 7., 7.04, 6.91, 7.81,
		7.18, 7.41, 7.42, 7.84, 7.78, 7.76, 8.31, 8.17, 8.56,
		8.54, 8.97, 8.59, 9.14, 8.77, 9.22, 9.51, 9.57, 9.6,
		10.23, 10.23, 10.32, 10.1, 10.3, 10.54, 10.66, 10.83, 11.04,
		11.11, 11.31, 11.57, 11.1, 12.03, 11.99, 12.07, 11.65, 12.09,
		12.58, 12.6, 12.83, 12.8, 13.16, 13.28, 13.3, 13.64, 13.58,
		13.84, 13.92, 14.3, 14.24, 14.83, 14.51, 14.64, 15.14, 14.94,
		15.08, 15.64, 15.45, 15.35, 15.51, 15.91, 15.8, 16.26, 16.34,
		16.02, 16.03, 16.54, 16.36, 16.35, 16.37, 16.37, 16.36, 16.37,
		16.37, 16.37, 16.37, 16.37, 16.37, 16.37, 16.37, 16.37, 16.37,
		16.37, 16.37, 16.37, 16.32, 16.2, 16.12, 16.18, 15.58, 11.35,
		10.37, 8.28, 3.52, 2.18, 0., 0., 1.82, 0., 0.24,
		0., 0., 0.02, 0., 0., 0.02,
	}
	tests := []struct {
		N     int
		Wn    interface{}
		btype string
		fs    float64
		X     numgo.Array
		y     numgo.Array
		err   error
	}{
		{1, 0.125, "lp", 2.0, X,
			numgo.Array{11.31846057, 9.7595888, 7.9678913, 6.05720156, 4.41959277,
				3.24248929, 2.40772363, 1.83294221, 1.40571571, 1.01815539,
				0.70485606, 0.48257638, 0.32993071, 0.23041658, 0.16639975,
				0.12856711, 0.11109641, 0.10904893, 0.12043945, 0.1401416,
				0.15904316, 0.1740794, 0.18855198, 0.20566967, 0.22495753,
				0.24671014, 0.27451202, 0.31253251, 0.36662484, 0.43540355,
				0.50301288, 0.56411535, 0.61971654, 0.68845378, 0.80513567,
				0.95191306, 1.09818177, 1.24497479, 1.38311248, 1.49704539,
				1.59730868, 1.70948731, 1.8401197, 1.97736319, 2.11046453,
				2.24529027, 2.39005089, 2.53893952, 2.69218496, 2.84867418,
				2.99835355, 3.14034631, 3.27250907, 3.39561018, 3.517164,
				3.63619069, 3.7582973, 3.88959845, 4.01177028, 4.10539656,
				4.16407149, 4.1879887, 4.195508, 4.20105121, 4.20429587,
				4.20618863, 4.20745332, 4.20829837, 4.20886301, 4.20924029,
				4.20949238, 4.20966083, 4.20977339, 4.2098486, 4.20989887,
				4.20993248, 4.20995495, 4.20997001, 4.20998012, 4.20998695,
				4.20999163, 4.20999494, 4.20999741, 4.20999946, 4.21000141,
				4.2100036, 4.21000638, 4.21001021, 4.21001572, 4.21002383,
				4.21003586, 4.2100538, 4.21008061, 4.2101207, 4.21018068,
				4.21027043, 4.21040474, 4.21060575, 4.21090658, 4.2113568,
				4.21203059, 4.213039, 4.21454819, 4.21680685, 4.22018717,
				4.22524617, 4.23281751, 4.24414882, 4.26069536, 4.28435982,
				4.31780585, 4.36572091, 4.43064517, 4.51339007, 4.6061687,
				4.69913992, 4.79608902, 4.89939698, 5.01743618, 5.15729879,
				5.30454354, 5.44841739, 5.58420319, 5.70296729, 5.81192133,
				5.92943119, 6.05261478, 6.17870101, 6.31610809, 6.45575757,
				6.60747876, 6.77938254, 6.94294535, 7.09751841, 7.24055959,
				7.35279591, 7.45807766, 7.58034499, 7.71214427, 7.84264906,
				7.98182959, 8.13408239, 8.28577203, 8.43470516, 8.57988205,
				8.71309264, 8.83733774, 8.96402787, 9.09962095, 9.25574962,
				9.42436064, 9.58833474, 9.756566, 9.92587923, 10.07103164,
				10.18628091, 10.29226614, 10.41263147, 10.54990887, 10.69376262,
				10.84112013, 10.98866221, 11.13351208, 11.27688088, 11.41232041,
				11.55184994, 11.70816276, 11.85140204, 11.96685901, 12.08591801,
				12.24138084, 12.41972907, 12.59102931, 12.75220015, 12.91126177,
				13.07259112, 13.22940391, 13.38199886, 13.5349232, 13.68701095,
				13.84354969, 14.00808867, 14.17478445, 14.33897294, 14.49269317,
				14.62831894, 14.76490359, 14.90682784, 15.03916623, 15.17383899,
				15.30667259, 15.41547611, 15.51488298, 15.63074901, 15.75662553,
				15.87823834, 15.98926182, 16.0713264, 16.1255962, 16.1836719,
				16.24647228, 16.28932917, 16.31353728, 16.33050102, 16.34177986,
				16.34882043, 16.35319486, 16.35521202, 16.35479236, 16.35186671,
				16.34595298, 16.33607667, 16.32061033, 16.29700534, 16.26137197,
				16.20783839, 16.12758312, 16.00738132, 15.82742561, 15.56012192,
				15.17048591, 14.60955418, 13.79395709, 12.61236678, 11.09129865,
				9.39371325, 7.58097869, 5.76304991, 4.17385011, 2.94781042,
				2.11771641, 1.56161212, 1.11288335, 0.76267643, 0.51837256,
				0.34960134, 0.23761504, 0.16313615, 0.11471563, 0.08437454}, nil},
		{2, 0.125, "lp", 2.0, X,
			numgo.Array{1.12928935e+01, 9.34109167e+00, 7.43267100e+00, 5.64147781e+00,
				4.06003577e+00, 2.75667026e+00, 1.74980658e+00, 1.01513871e+00,
				5.04720588e-01, 1.66610722e-01, -4.19323768e-02, -1.54103676e-01,
				-1.97424427e-01, -1.94672305e-01, -1.63701113e-01, -1.17567702e-01,
				-6.52057687e-02, -1.24678777e-02, 3.68414241e-02, 8.01631925e-02,
				1.16045794e-01, 1.44517632e-01, 1.67095983e-01, 1.86196656e-01,
				2.04570395e-01, 2.25119041e-01, 2.50743615e-01, 2.83919190e-01,
				3.26070005e-01, 3.77159634e-01, 4.36466055e-01, 5.04392177e-01,
				5.83603533e-01, 6.78249667e-01, 7.90665230e-01, 9.18239208e-01,
				1.05463758e+00, 1.19313179e+00, 1.32836723e+00, 1.45782769e+00,
				1.58297072e+00, 1.70770669e+00, 1.83529848e+00, 1.96702992e+00,
				2.10325031e+00, 2.24448340e+00, 2.39103083e+00, 2.54223414e+00,
				2.69652248e+00, 2.85162095e+00, 3.00500326e+00, 3.15473363e+00,
				3.29992219e+00, 3.44069599e+00, 3.57761435e+00, 3.71070469e+00,
				3.83864835e+00, 3.95786012e+00, 4.06244381e+00, 4.14634890e+00,
				4.20617629e+00, 4.24263927e+00, 4.26005876e+00, 4.26416260e+00,
				4.26007777e+00, 4.25174164e+00, 4.24195489e+00, 4.23250808e+00,
				4.22438836e+00, 4.21800342e+00, 4.21337939e+00, 4.21032025e+00,
				4.20852590e+00, 4.20767241e+00, 4.20746094e+00, 4.20764286e+00,
				4.20802809e+00, 4.20848298e+00, 4.20892229e+00, 4.20929896e+00,
				4.20959362e+00, 4.20980549e+00, 4.20994496e+00, 4.21002822e+00,
				4.21007353e+00, 4.21009889e+00, 4.21012075e+00, 4.21015311e+00,
				4.21020683e+00, 4.21028865e+00, 4.21039983e+00, 4.21053399e+00,
				4.21067451e+00, 4.21079132e+00, 4.21083775e+00, 4.21074827e+00,
				4.21043807e+00, 4.20980638e+00, 4.20874551e+00, 4.20715798e+00,
				4.20498426e+00, 4.20224322e+00, 4.19908628e+00, 4.19586401e+00,
				4.19320078e+00, 4.19206745e+00, 4.19383590e+00, 4.20029017e+00,
				4.21357559e+00, 4.23607305e+00, 4.27016202e+00, 4.31778448e+00,
				4.37988073e+00, 4.45599943e+00, 4.54451654e+00, 4.64370616e+00,
				4.75270571e+00, 4.87139073e+00, 4.99944798e+00, 5.13505242e+00,
				5.27437589e+00, 5.41288596e+00, 5.54707631e+00, 5.67572014e+00,
				5.80045276e+00, 5.92464410e+00, 6.05151889e+00, 6.18355816e+00,
				6.32235890e+00, 6.46832857e+00, 6.62058502e+00, 6.77616168e+00,
				6.93017584e+00, 7.07800099e+00, 7.21678732e+00, 7.34659896e+00,
				7.47105314e+00, 7.59499762e+00, 7.72168154e+00, 7.85269427e+00,
				7.98873189e+00, 8.12912543e+00, 8.27176085e+00, 8.41426782e+00,
				8.55498388e+00, 8.69360018e+00, 8.83177272e+00, 8.97263602e+00,
				9.11926228e+00, 9.27294451e+00, 9.43215500e+00, 9.59339454e+00,
				9.75263139e+00, 9.90557074e+00, 1.00487748e+01, 1.01822111e+01,
				1.03098764e+01, 1.04371755e+01, 1.05677858e+01, 1.07027566e+01,
				1.08414034e+01, 1.09822701e+01, 1.11238223e+01, 1.12649134e+01,
				1.14051510e+01, 1.15449058e+01, 1.16841134e+01, 1.18220616e+01,
				1.19599834e+01, 1.21021397e+01, 1.22523324e+01, 1.24103174e+01,
				1.25727721e+01, 1.27365601e+01, 1.29000376e+01, 1.30624011e+01,
				1.32232351e+01, 1.33827866e+01, 1.35419254e+01, 1.37016756e+01,
				1.38627557e+01, 1.40249186e+01, 1.41866160e+01, 1.43455258e+01,
				1.44995547e+01, 1.46480173e+01, 1.47917467e+01, 1.49315601e+01,
				1.50676075e+01, 1.51998439e+01, 1.53278318e+01, 1.54514874e+01,
				1.55723516e+01, 1.56920413e+01, 1.58095811e+01, 1.59213305e+01,
				1.60227153e+01, 1.61102116e+01, 1.61831050e+01, 1.62427810e+01,
				1.62899625e+01, 1.63243337e+01, 1.63465683e+01, 1.63589464e+01,
				1.63644730e+01, 1.63663589e+01, 1.63679049e+01, 1.63724132e+01,
				1.63831391e+01, 1.64031838e+01, 1.64352036e+01, 1.64808753e+01,
				1.65400742e+01, 1.66097335e+01, 1.66824025e+01, 1.67445974e+01,
				1.67751528e+01, 1.67439305e+01, 1.66114328e+01, 1.63299988e+01,
				1.58472134e+01, 1.51122574e+01, 1.40867720e+01, 1.27615771e+01,
				1.11719442e+01, 9.39694156e+00, 7.54547836e+00, 5.74225151e+00,
				4.10829485e+00, 2.73353760e+00, 1.65731942e+00, 8.68861457e-01,
				3.27125862e-01, -1.62958061e-02, -2.07593302e-01, -2.89355561e-01,
				-2.98817804e-01, -2.66382791e-01, -2.15316624e-01, -1.62300232e-01}, nil},
		{1, 0.125, "hp", 2.0, X,
			numgo.Array{-2.84605699e-02, 2.31041120e+00, 1.29210870e+00, -1.88720156e+00,
				-4.41959277e+00, -9.12489289e-01, -2.40772363e+00, -8.42942214e-01,
				3.64284293e-01, -8.88155393e-01, -4.64856057e-01, -4.82576384e-01,
				-3.29930707e-01, -2.00416580e-01, -1.66399745e-01, -1.28567110e-01,
				-9.10964068e-02, -7.90489314e-02, -9.04394477e-02, 4.98584017e-02,
				1.09568400e-02, 2.59205996e-02, -4.85519793e-02, 4.33032594e-03,
				-1.49575256e-02, -3.67101441e-02, -6.45120217e-02, -9.25325131e-02,
				-1.56624841e-01, 3.45964472e-02, 1.16987119e-01, -1.04115347e-01,
				2.30283456e-01, -6.88453783e-01, -6.51356670e-02, 5.80869400e-02,
				-3.81817734e-02, 5.02520662e-03, 2.46887521e-01, 1.12954608e-01,
				-1.27308680e-01, -1.59487310e-01, -2.01197020e-02, 3.26368050e-02,
				5.95354653e-02, -1.95290266e-01, 7.99491064e-02, -6.89395173e-02,
				-5.21849610e-02, 9.13258208e-02, 4.16464532e-02, 1.96536934e-02,
				1.67490932e-01, -1.25610182e-01, 1.22835999e-01, -5.61906855e-02,
				-8.82973039e-02, 4.01552497e-04, 3.18229720e-01, 8.46034441e-02,
				3.95928507e-01, 2.01129677e-03, 1.44919962e-02, 1.89487896e-02,
				5.70412598e-03, 3.81137429e-03, 2.54667763e-03, 1.70163372e-03,
				1.13699250e-03, 7.59709907e-04, 5.07615657e-04, 3.39168548e-04,
				2.26611126e-04, 1.51395682e-04, 1.01127885e-04, 6.75243852e-05,
				4.50478512e-05, 2.99945002e-05, 1.98837751e-05, 1.30495858e-05,
				8.36576479e-06, 5.06049128e-06, 2.58910779e-06, 5.44368877e-07,
				-1.41066654e-06, -3.59815779e-06, -6.37856932e-06, -1.02100696e-05,
				-1.57240300e-05, -2.38290653e-05, -3.58607589e-05, -5.38017461e-05,
				-8.06084218e-05, -1.20698108e-04, -1.80676959e-04, -2.70428555e-04,
				-4.04742559e-04, -6.05751822e-04, -9.06579536e-04, -1.35679742e-03,
				-2.03059435e-03, -3.03900155e-03, -4.54818879e-03, -6.80684661e-03,
				-1.01871666e-02, -1.52461726e-02, -2.28175102e-02, -3.41488174e-02,
				-4.06953560e-02, -6.43598155e-02, -7.78058466e-02, -1.45720912e-01,
				-6.06451725e-02, -1.83390071e-01, 1.73831297e-01, -1.69139919e-01,
				6.39109821e-02, -1.19396985e-01, -1.97436180e-01, -3.72987913e-02,
				8.54564552e-02, -4.84173937e-02, 2.15796805e-01, 4.70327063e-02,
				-6.19213312e-02, -1.39431194e-01, 1.97385219e-01, -3.28701009e-01,
				1.73891909e-01, -7.57575746e-02, -3.27478764e-01, 2.20617458e-01,
				9.70546464e-02, -1.87518410e-01, 5.69440408e-01, -1.72795911e-01,
				-4.80776552e-02, -1.60344989e-01, 1.27855726e-01, -6.26490577e-02,
				-2.21829585e-01, 1.75917609e-01, -1.15772027e-01, 1.25294845e-01,
				-3.98820483e-02, 2.56907364e-01, -2.47337738e-01, 1.75972131e-01,
				-3.29620949e-01, -3.57496175e-02, 8.56393586e-02, -1.83347380e-02,
				-1.56565996e-01, 3.04120771e-01, 1.58968355e-01, 1.33719093e-01,
				-1.92266140e-01, -1.12631471e-01, -9.90886766e-03, -3.37626231e-02,
				-1.11201272e-02, 5.13377892e-02, -2.35120816e-02, 3.31191164e-02,
				1.57679594e-01, -4.51849944e-01, 3.21837236e-01, 1.38597955e-01,
				1.03140987e-01, -4.35918005e-01, -1.51380838e-01, 1.60270932e-01,
				8.97068579e-03, 7.77998493e-02, -1.11261772e-01, 8.74088819e-02,
				5.05960917e-02, -8.19988618e-02, 1.05076803e-01, -1.07010953e-01,
				-3.54969394e-03, -8.80886667e-02, 1.25215552e-01, -9.89729427e-02,
				3.37306830e-01, -1.18318944e-01, -1.24903590e-01, 2.33172158e-01,
				-9.91662293e-02, -9.38389904e-02, 3.33327409e-01, 3.45238899e-02,
				-1.64882981e-01, -1.20749010e-01, 1.53374473e-01, -7.82383356e-02,
				2.70738176e-01, 2.68673598e-01, -1.05596203e-01, -1.53671897e-01,
				2.93527727e-01, 7.06708321e-02, 3.64627253e-02, 3.94989898e-02,
				2.82201497e-02, 1.11795890e-02, 1.68051721e-02, 1.47880245e-02,
				1.52077127e-02, 1.81333947e-02, 2.40471772e-02, 3.39235595e-02,
				4.93900151e-02, 7.29951748e-02, 1.08628801e-01, 1.62162758e-01,
				2.42418609e-01, 3.62621264e-01, 5.42578248e-01, 7.59883857e-01,
				1.02952275e+00, 1.51045877e+00, 2.38606228e+00, 2.96766222e+00,
				2.58744750e-01, 9.76351705e-01, 6.99118519e-01, -2.24290443e+00,
				-1.99363237e+00, -2.94748456e+00, -2.11722872e+00, 2.59117747e-01,
				-1.11179102e+00, -5.21041644e-01, -5.15925929e-01, -3.45939694e-01,
				-2.12135003e-01, -1.54934694e-01, -1.02441285e-01, -4.60046791e-02}, nil},

		{1, numgo.Array{0.00001, 0.125}, "bp", 2.0, X,
			numgo.Array{11.60709408, 10.05830118, 8.27354205, 6.36770243, 4.73351937,
				3.55887424, 2.72593752, 2.15257486, 1.72650696, 1.33994767,
				1.027543, 0.80608644, 0.65421951, 0.55545698, 0.49217615,
				0.45507058, 0.43832191, 0.43699379, 0.44910205, 0.46952128,
				0.48914057, 0.50489561, 0.52008764, 0.53792518, 0.55793364,
				0.58040791, 0.60893235, 0.64767603, 0.70249147, 0.7719933,
				0.84032795, 0.90215871, 0.95849154, 1.02796177, 1.14537316,
				1.29287891, 1.43987835, 1.58740302, 1.72627369, 1.84094287,
				1.94194436, 2.05485991, 2.18622743, 2.32420612, 2.45804424,
				2.59360738, 2.73910476, 2.88873019, 3.04271211, 3.19993713,
				3.35035262, 3.49308147, 3.62598035, 3.74981746, 3.87210602,
				3.99186638, 4.11470454, 4.24673351, 4.36963119, 4.46398319,
				4.52338405, 4.54802756, 4.55627152, 4.56253662, 4.56650134,
				4.56911283, 4.57109529, 4.57265743, 4.57393869, 4.57503227,
				4.57600044, 4.57688481, 4.57771319, 4.57850415, 4.57927012,
				4.58001939, 4.58075751, 4.5814882, 4.58221394, 4.5829364,
				4.58365671, 4.58437564, 4.58509374, 4.58581142, 4.58652901,
				4.58724684, 4.58796526, 4.58868474, 4.58940592, 4.59012969,
				4.5908574, 4.59159102, 4.59233354, 4.59308935, 4.59386508,
				4.59467061, 4.59552076, 4.59643767, 4.59745448, 4.59862081,
				4.60001088, 4.60173577, 4.60396174, 4.60693758, 4.61103558,
				4.61681291, 4.62510337, 4.63715476, 4.65442249, 4.67880941,
				4.7129792, 4.76161897, 4.82726868, 4.91073953, 5.00424549,
				5.09794656, 5.1956273, 5.29966838, 5.4184409, 5.55903565,
				5.70701287, 5.85162027, 5.98814069, 6.10764157, 6.21733367,
				6.33558059, 6.45950113, 6.58632498, 6.7244692, 6.86485683,
				7.01731554, 7.18995443, 7.35425352, 7.50956325, 7.65334132,
				7.76631778, 7.87233992, 7.99534509, 8.12788138, 8.25912421,
				8.39904237, 8.5520316, 8.70445819, 8.8541287, 9.00004321,
				9.13399284, 9.25897825, 9.38640876, 9.52274191, 9.67960878,
				9.84895711, 10.01366966, 10.18263843, 10.35268792, 10.49857858,
				10.61456894, 10.72129571, 10.84240042, 10.98041529, 11.12500634,
				11.27310122, 11.421381, 11.56696909, 11.71107629, 11.84725543,
				11.98752407, 12.14457347, 12.28855119, 12.40475091, 12.52455296,
				12.68075488, 12.85984025, 13.03187959, 13.19379132, 13.35359412,
				13.51566413, 13.67321805, 13.82655455, 13.98022026, 14.13304955,
				14.29032928, 14.45560805, 14.62304303, 14.78797032, 14.94242972,
				15.0787961, 15.21611997, 15.35878151, 15.49185754, 15.62726628,
				15.76083464, 15.87037501, 15.97051886, 16.08711834, 16.21372564,
				16.33606808, 16.44782011, 16.53061434, 16.58561472, 16.6444174,
				16.7079412, 16.75152165, 16.77645322, 16.79413888, 16.80613825,
				16.81389801, 16.81899025, 16.82172386, 16.82201916, 16.81980673,
				16.81460402, 16.80543591, 16.79067403, 16.76776858, 16.73282822,
				16.67997913, 16.60039738, 16.48085532, 16.30154268, 16.03486259,
				15.64582825, 15.08547581, 14.27044176, 13.08941314, 11.56890596,
				9.87186678, 8.05966928, 6.2422671, 4.65355938, 3.42795859,
				2.59823074, 2.04240452, 1.59383636, 1.24359411, 0.99894287,
				0.82934843, 0.71581692, 0.63870436, 0.58601363, 0.54894685}, nil},

		{1, numgo.Array{0.00001, 0.125}, "bs", 2.0, X,
			numgo.Array{22.85840212, 25.18792322, 24.16341058, 20.97997845, 18.44488978,
				21.95026321, 20.45392825, 22.01801926, 23.22481552, 21.9721032,
				22.39523628, 22.37742128, 22.53001667, 22.65950768, 22.69351701,
				22.7313511, 22.76882833, 22.78088502, 22.76950535, 22.90981474,
				22.87092409, 22.88589772, 22.81143437, 22.86432554, 22.84504582,
				22.8233003, 22.79550464, 22.76748976, 22.70340315, 22.89463016,
				22.97702438, 22.75592251, 23.0903186, 22.17157731, 22.79489488,
				22.91811812, 22.82184768, 22.86505204, 23.10691043, 22.97297033,
				22.73269793, 22.7005115, 22.83987313, 22.89262361, 22.91951468,
				22.66468075, 22.93991261, 22.79101644, 22.8077638, 22.95126809,
				22.90158193, 22.87958243, 23.02741292, 22.73430521, 22.98274606,
				22.80371515, 22.77160645, 22.86030698, 23.1781388, 22.94451634,
				23.25584503, 22.86193111, 22.87441675, 22.87888128, 22.8656462,
				22.86376439, 22.86251162, 22.8616792, 22.86112768, 22.86076386,
				22.86052548, 22.86037092, 22.86027238, 22.86021127, 22.86017518,
				22.86015581, 22.86014761, 22.86014687, 22.8601511, 22.86015863,
				22.86016834, 22.86017944, 22.86019141, 22.86020382, 22.86021633,
				22.86022864, 22.86024036, 22.86025106, 22.86026009, 22.86026654,
				22.86026907, 22.86026571, 22.86025349, 22.860228, 22.8601826,
				22.86010743, 22.85998766, 22.85980116, 22.85951478, 22.8590789,
				22.85841931, 22.85742491, 22.85592946, 22.85368417, 22.85031674,
				22.84527, 22.83771015, 22.8263894, 22.81985232, 22.79619608,
				22.782757, 22.71484795, 22.79992899, 22.67718891, 23.03441376,
				22.69144351, 22.92449361, 22.74118339, 22.66314176, 22.82327792,
				22.94603164, 22.81215519, 23.07636575, 22.90759588, 22.7986348,
				22.72111893, 23.05792946, 22.53183671, 23.0344236, 22.78476711,
				22.53303957, 23.08113187, 22.95756398, 22.67298549, 23.42993867,
				22.68769349, 22.81240265, 22.7001288, 22.98832387, 22.79781241,
				22.63862564, 23.03636783, 22.74467267, 22.98573363, 22.82055061,
				23.11733248, 22.6130786, 23.03637965, 22.53077808, 22.82464281,
				22.9460261, 22.8420452, 22.7038081, 23.1644903, 23.01933135,
				22.99407273, 22.66807772, 22.7477048, 22.85042173, 22.82656252,
				22.84919949, 22.91165158, 22.83679539, 22.89342011, 23.01797292,
				22.40843625, 23.18211884, 22.99887313, 22.96340545, 22.42433546,
				22.70886562, 23.02051237, 22.86920515, 22.93802557, 22.74895495,
				22.94761714, 22.91079544, 22.77819118, 22.96525774, 22.75316074,
				22.85661333, 22.77206689, 22.98536427, 22.76116936, 23.19744236,
				22.74180841, 22.735217, 23.09328793, 22.7609444, 22.76626818,
				23.19343237, 22.89462456, 22.6952133, 22.73934644, 23.01347177,
				22.78186198, 23.13084264, 23.12878111, 22.75451346, 22.70644353,
				23.1536525, 22.93080485, 22.89660609, 22.89965327, 22.88838677,
				22.8713599, 22.87700056, 22.87499987, 22.87543751, 22.87838289,
				22.88431856, 22.89421965, 22.90971448, 22.93335288, 22.96902614,
				23.02260805, 23.1029225, 23.22319706, 23.40324189, 23.62065371,
				23.89041906, 24.37150143, 25.24726378, 25.82901826, 23.12024761,
				23.83800344, 23.56090934, 20.61900753, 20.86839272, 19.91464324,
				20.74497927, 23.12135148, 21.75037257, 22.34092847, 22.3456849,
				22.51507256, 22.64793042, 22.70367063, 22.75394341, 22.80702748}, nil},
	}
	for i, tt := range tests {
		y, err := ButterFilter(tt.X, tt.N, tt.Wn, tt.btype, tt.fs)
		if !y.IsEqual(tt.y) {
			t.Error(i, "y 错误:\n期望值:", tt.y, "\n得到值:", y)
		}
		if err != nil {
			if err.Error() != tt.err.Error() {
				t.Error(i, "err 错误:\n期望值:", tt.err, "\n得到值:", err)
			}
		}
	}
}
